{"version":3,"sources":["redux/actionConstants.js","redux/Api.js","redux/Actions.js","components/Weather.js","App.js","redux/Reducer.js","redux/store.js","index.js"],"names":["actionTypes","BASE_URL","FetchWeatherData","location","dispatch","a","type","axios","get","params","q","units","lang","then","response","payload","data","catch","err","console","log","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Weather","props","handleOnChange","e","setState","searchInput","target","value","handleSubmit","preventDefault","state","action","this","weatherData","success","weather","sys","name","main","className","onSubmit","placeholder","onChange","moment","format","country","src","icon","alt","temp","feels_like","temp_min","temp_max","pressure","humidity","React","Component","connect","bindActionCreators","App","basname","process","path","exact","component","initialState","loading","store","createStore","composeWithDevTools","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b515463e.chunk.js","sourcesContent":["export const actionTypes = {\n    PENDING: \"FETCH_WEATHER_PENDING\",\n    SUCCESS: \"FETCH_WEATHER_SUCCESS\",\n    FAIL: \"FETCH_WEATHER_FAIL\"\n}","export const API_KEY = \"f9230ac8b71b37416db0d6b8f595925a\";\nexport const BASE_URL = `https://api.openweathermap.org/data/2.5/weather?appid=${API_KEY}`","import { actionTypes } from \"./actionConstants\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"./Api\";\nimport { toast } from \"react-toastify\";\n\nexport const FetchWeatherData = (location = \"mandalay\") => async(dispatch) => {\n    dispatch({ type: actionTypes.PENDING})\n    axios.get(BASE_URL, {\n        params: {\n            q: location,\n            units: \"Metric\",\n            lang: \"en\"\n        }\n    })\n    .then(response => {\n        dispatch({ type: actionTypes.SUCCESS, payload: response.data})\n    })\n    .catch(err => {\n        console.log(err.response, err);\n        toast.error(err.response.data.message, {\n            position: \"bottom-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        });\n        dispatch({ type: actionTypes.FAIL, payload: err.response})\n    })\n}","import React from 'react'\nimport { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { FetchWeatherData } from '../redux/Actions'\nimport { ToastContainer } from 'react-toastify'\nimport moment from 'moment'\nimport { render } from '@testing-library/react'\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass Weather extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            searchInput: \"\"\n        };\n    }\n\n\ncomponentDidMount() {\n    const { FetchWeatherData } = this.props.action;\n    FetchWeatherData();\n}\n\nhandleOnChange = (e) => {\n    this.setState({\n        searchInput: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault();\n    const { searchInput } = this.state;\n    const { FetchWeatherData } = this.props.action;\n    if ( searchInput ) {\n        FetchWeatherData(this.state.searchInput)\n    }\n    this.setState({ searchInput: \"\"})\n}\nrender() {\n    const { data, success} =  this.props.weatherData;\n    const { weather, sys, name, main} = data;\n    const { searchInput } = this.state;\n    return(\n        <>\n        <div className=\"container\">\n            <div className=\"heading\">Weather Forecasting React App</div>\n            <form className=\"search-form\" onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search Weather by City\"\n                    value={searchInput}\n                    onChange={e => this.handleOnChange(e)}/>\n                <button>Find</button>\n            </form>\n            <div className=\"helper-text\">Type City Name and Hit Enter</div>\n            <div className=\"info\">\n                <div className=\"sub-heading\">\n                    Weather Forecast <div>on</div>\n                </div>\n                <p className=\"date\">\n                    {success ? moment().format(\"MM DD YYYY\") : null}\n                </p>\n                <div className=\"location\">\n                    {success ? name: null}\n                    <p>({success ? sys.country : null})</p>\n                </div>\n                <div className=\"forecast-info\">\n                    <div className=\"forecast-icon\">\n                        {success ? (\n                            <img\n                                src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\n                                alt=\"weather icon\"/>\n                        ) : null}\n                    </div>\n                <div className=\"forecast-value\">\n                    <div className=\"degrees\">\n                        <span className=\"degrees-count\">\n                            {success ? main.temp: null}\n                        </span>\n                        C\n                    </div>\n                        <span className=\"weather-condition\">\n                            {success ? weather[0].main: null}\n                        </span>\n\n                </div>\n                <div className=\"additional-info\">\n                    <ul className=\"list\">\n                        <li>\n                            <b>Feels Like</b> {success ? main.feels_like : null}\n                        </li>\n                        <li>\n                            <b>Min temp</b> {success ? main.temp_min : null}\n                        </li>\n                        <li>\n                            <b>Max temp</b> {success ? main.temp_max : null}\n                        </li>\n                        <li>\n                            <b>Pressure</b> {success ? main.pressure : null}\n                        </li>\n                        <li>\n                            <b>Humidity</b> {success ? main.humidity : null}\n                        </li>\n                    </ul>\n                </div>\n                </div>\n            </div>\n        </div>\n        <ToastContainer />\n        </>\n    )\n}\n}\nconst mapStateToProps = state => ({\n    weatherData: state\n})\nconst mapDispatchToProps = dispatch => ({\n    action: bindActionCreators({ FetchWeatherData }, dispatch)\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);","import React from 'react'\nimport './style.css'\nimport Weather from './components/Weather'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nconst App = () => {\n    return(\n        <Router basname={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/\" exact component={Weather} />\n            </Switch>\n        </Router>\n    )\n}\nexport default App;","import { actionTypes } from \"./actionConstants\";\nconst initialState = {\n    loading: false,\n    error: false,\n    success: false,\n    data: {}\n}\nexport const Reducer = (state = initialState, {type,payload} ) => {\n    switch(type){\n        case actionTypes.PENDING:\n            return{\n                ...state,\n                loading: true\n            };\n        case actionTypes.SUCCESS:\n            return{\n                ...state,\n                loading: false,\n                success: true,\n                data: payload\n            };\n        case actionTypes.FAIL:\n            return{\n                ...state,\n                error: true\n            };\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport { Reducer } from \"./Reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n    Reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,rootElement);"],"sourceRoot":""}